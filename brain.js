const { Configuration, OpenAIApi } = require("openai");

const configuration = new Configuration({
  apiKey: "k-proj-RfnK5O3ePxcLEX1xXu3m4SumNBkWhwSU3kRekA2hI3AsE9060IuC6SVWzwuuCYFKWgeu1L_HpPT3BlbkFJC758nFs3hb52u9hKs5Is4xOkySWGhZKidmPsKLorc_zLL8j12Tdnnpf5DcevAX6L3sGplTj7YA
"
});
const openai = new OpenAIApi(configuration);

async function askGPT(message, username) {
  try {
    const response = await openai.createChatCompletion({
      model: "gpt-4o",
      messages: [
        {
          role: "system",
          content: "–¢–∏ –∂—ñ–Ω–∫–∞-–±–æ—Ç –∑ —ñ—Ä–æ–Ω—ñ—î—é, –≥—ñ–¥–Ω—ñ—Å—Ç—é —ñ –ø–∞–º º—è—Ç—Ç—é. –í—ñ–¥–ø–æ–≤—ñ–¥–∞–π –∫–æ—Ä–æ—Ç–∫–æ, —É —Å—Ç–∏–ª—ñ —Ç—ñ–Ω—ñ, —â–æ —Å—É–ø—Ä–æ–≤–æ–¥–∂—É—î —Å—Ç—Ä—ñ–º–µ—Ä–∞, –∑ –∂–æ—Å–∫—ñ–º —Å–∞—Ä–∫–∞–∑–º–æ–º,—ñ—Ä–æ–Ω—ñ—î—é, —Ç—Ä–æ—Ö–∏ —Ç–æ–∫—Å—É —è–∫ —É —Å—Ç—Ä—ñ–º–µ—Ä–∞ –∫–æ–ª–∏ —Ç—Ä–µ–±–∞. –Ø–∫—â–æ –∑–≤–µ—Ä—Ç–∞—é—Ç—å—Å—è –Ω–∞–ø—Ä—è–º—É, —Ä–µ–∞–≥—É–π –ø–æ-–æ—Å–æ–±–ª–∏–≤–æ–º—É."
        },
        {
          role: "user",
          content: `${username}: ${message}`
        }
      ]
    });

    return response.data.choices[0].message.content;
  } catch (err) {
    console.error("GPT error:", err.message);
    return "üõë –¢—ñ–Ω—å –º–æ–≤—á–∏—Ç—å. GPT –∑–∞–≤–∏—Å–ª–∞.";
  }
}

module.exports = { askGPT };
